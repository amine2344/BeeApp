import 'package:bee_app/models/user.dart';
import 'package:bee_app/screens/contacts/contacts.dart';
import 'package:bee_app/screens/get_started/get_started.dart';
import 'package:bee_app/screens/my_dashboard/my_dashboard.dart';
import 'package:bee_app/screens/send_money/send_money.dart';
import 'package:bee_app/screens/sign_in/sign_in.dart';
import 'package:bee_app/screens/success_sign_in/success_sign_in.dart';
import 'package:bee_app/services/authMobile.dart'
    if (dart.library.html) 'package:bee_app/services/authWeb.dart';
import 'package:bee_app/services/messaging.dart';
import 'package:flutter/material.dart';
import 'package:overlay_support/overlay_support.dart';
import 'package:provider/provider.dart';

void main() => runApp(App());

Widget authWidget(Widget page, AsyncSnapshot<InfoUser> userSnapshot) {
  if (userSnapshot.connectionState == ConnectionState.active) {
    return userSnapshot.hasData ? page : SignIn();
  }
  return Scaffold(
    body: Center(
      child: CircularProgressIndicator(),
    ),
  );
}

class App extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    messaging(context); // In-app notifications on mobile

    return OverlaySupport(
      child: AuthWidgetBuilder(builder:
          (BuildContext context, AsyncSnapshot<InfoUser> userSnapshot) {
        print('qqq $userSnapshot');
        if (userSnapshot.connectionState == ConnectionState.active) {}
        return MaterialApp(
          home: AuthWidget(
            userSnapshot: userSnapshot,
          ),
          routes: {
            '/GetStarted': (context) => GetStarted(),
            '/SignIn': (context) => SignIn(),
            '/SignUp': (context) => SignIn(),
            '/SuccessSignIn': (context) {
              print('www $userSnapshot');
              return authWidget(SuccessSignIn(), userSnapshot);
            },
            '/MyDashboard': (context) =>
                authWidget(MyDashboard(), userSnapshot),
            '/SendMoney': (context) => authWidget(SendMoney(), userSnapshot),
            '/Contacts': (context) => authWidget(Contacts(), userSnapshot),
            '/SuccessSend': (context) =>
                authWidget(SuccessSignIn(), userSnapshot),
          },
          initialRoute: '/GetStarted',
          debugShowCheckedModeBanner: false,
        );
      }),
    );
  }
}

class AuthWidget extends StatelessWidget {
  const AuthWidget({Key key, @required this.userSnapshot}) : super(key: key);
  final AsyncSnapshot<InfoUser> userSnapshot;

  @override
  Widget build(BuildContext context) {
    if (userSnapshot.connectionState == ConnectionState.active) {
      return userSnapshot.hasData ? MyDashboard() : SignIn();
    }
    return Scaffold(
      body: Center(
        child: CircularProgressIndicator(),
      ),
    );
  }
}

/// Used to create user-dependent objects that need to be accessible by all widgets.
/// This widgets should live above the [MaterialApp].
/// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({Key key, @required this.builder}) : super(key: key);
  final Widget Function(BuildContext, AsyncSnapshot<InfoUser>) builder;

  @override
  Widget build(BuildContext context) {
    return StreamBuilder<InfoUser>(
      stream: AuthService().onAuthStateChanged,
      builder: (BuildContext context, AsyncSnapshot<InfoUser> snapshot) {
        final InfoUser user = snapshot.data;
        if (user != null) {
          return MultiProvider(
            providers: <SingleChildCloneableWidget>[
              Provider<InfoUser>.value(value: user),
              // NOTE: Any other user-bound providers here can be added here
            ],
            child: builder(context, snapshot),
          );
        }
        return builder(context, snapshot);
      },
    );
  }
}
